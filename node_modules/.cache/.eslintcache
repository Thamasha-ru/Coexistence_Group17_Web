[{"/Users/thamasha/Downloads/2nd year/covid web dashboard/covid-dashboard/src/index.js":"1","/Users/thamasha/Downloads/2nd year/covid web dashboard/covid-dashboard/src/App.js":"2","/Users/thamasha/Downloads/2nd year/covid web dashboard/covid-dashboard/src/serviceWorker.js":"3","/Users/thamasha/Downloads/2nd year/covid web dashboard/covid-dashboard/src/InfoBox.js":"4","/Users/thamasha/Downloads/2nd year/covid web dashboard/covid-dashboard/src/Table.js":"5","/Users/thamasha/Downloads/2nd year/covid web dashboard/covid-dashboard/src/LineGraph.js":"6","/Users/thamasha/Downloads/2nd year/covid web dashboard/covid-dashboard/src/Map.js":"7","/Users/thamasha/Downloads/2nd year/covid web dashboard/covid-dashboard/src/util.js":"8"},{"size":503,"mtime":1665691574121,"results":"9","hashOfConfig":"10"},{"size":4491,"mtime":1668511624869,"results":"11","hashOfConfig":"10"},{"size":5344,"mtime":1665730860045,"results":"12","hashOfConfig":"10"},{"size":788,"mtime":1665691628291,"results":"13","hashOfConfig":"10"},{"size":402,"mtime":1665691744701,"results":"14","hashOfConfig":"10"},{"size":2237,"mtime":1667993818054,"results":"15","hashOfConfig":"10"},{"size":596,"mtime":1665695701718,"results":"16","hashOfConfig":"10"},{"size":1882,"mtime":1665691791179,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13kuh7j",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/thamasha/Downloads/2nd year/covid web dashboard/covid-dashboard/src/index.js",[],[],"/Users/thamasha/Downloads/2nd year/covid web dashboard/covid-dashboard/src/App.js",[],[],"/Users/thamasha/Downloads/2nd year/covid web dashboard/covid-dashboard/src/serviceWorker.js",[],[],"/Users/thamasha/Downloads/2nd year/covid web dashboard/covid-dashboard/src/InfoBox.js",[],[],"/Users/thamasha/Downloads/2nd year/covid web dashboard/covid-dashboard/src/Table.js",[],[],"/Users/thamasha/Downloads/2nd year/covid web dashboard/covid-dashboard/src/LineGraph.js",["43"],[],"import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport chart from 'chart.js/auto'\n\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxs: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          // Include a dollar sign in the ticks\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nconst buildChartData = (data, casesType) => {\n  let chartData = [];\n  let lastDataPoint;\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      \n      let newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint,\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  }\n  \n  return chartData;\n};\n\nfunction LineGraph({ casesType }) {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          let chartData = buildChartData(data, casesType);\n          setData(chartData);\n          console.log(chartData);\n          //buildChart(chartData);\n        });\n    };\n\n    fetchData();\n  }, [casesType]);\n\n  return (\n    <div>\n      {data?.length > 0 && (\n        <Line\n          data={{\n            datasets: [\n              {\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                borderColor: \"#CC1034\",\n                data: data,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default LineGraph;\n","/Users/thamasha/Downloads/2nd year/covid web dashboard/covid-dashboard/src/Map.js",[],[],"/Users/thamasha/Downloads/2nd year/covid web dashboard/covid-dashboard/src/util.js",[],[],{"ruleId":"44","severity":1,"message":"45","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":13},"no-unused-vars","'chart' is defined but never used.","Identifier","unusedVar"]